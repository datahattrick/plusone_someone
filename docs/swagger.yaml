basePath: /api/v1
definitions:
  handler.parameters:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      api_key:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: A simple API to create a message and give someone a plusone.
  title: Plusone Someone API
  version: "0.1"
paths:
  /user:
    get:
      consumes:
      - application/json
      description: Can search using username, email or name
      parameters:
      - description: username, email, name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: no search, no user
          schema:
            type: string
      summary: Search for a User account
    post:
      consumes:
      - application/json
      description: Creates a user account returns the account details
      parameters:
      - description: User parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.parameters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a User account
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: This will delete a user, more for cleaning database.
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Deletes A user
    get:
      consumes:
      - application/json
      description: Return a single user using their ID
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Return a user by ID
  /users:
    get:
      consumes:
      - application/json
      description: This will show all users that have been stored in the local DB.These
        users would have been synced on start up of the application. If not some default
        users would have been generated for testing.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Lists all users in the database.
schemes:
- http
- https
swagger: "2.0"
