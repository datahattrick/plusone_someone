basePath: /v1
definitions:
  posts.Post:
    properties:
      author_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  posts.postparams:
    properties:
      author_id:
        type: string
      message:
        type: string
      user_id:
        type: string
    type: object
  users.User:
    properties:
      api_key:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  users.Userparams:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: A simple API to create a message and give someone a plusone.
  title: Plusone Someone API
  version: "0.1"
paths:
  /posts:
    get:
      consumes:
      - application/json
      description: Returns every post in the database
      operationId: GetAllPosts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.Post'
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Creates a post, along with a message then sends user an anonymous
        email with said message
      operationId: CreatePost
      parameters:
      - description: Post Parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/posts.postparams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.Post'
      summary: Create a post to plusone someone
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a post, this is more for cleaning then actual use
      operationId: DeletePost
      parameters:
      - description: Post ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Returns a specific post
      operationId: GetPostByID
      parameters:
      - description: Post ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/posts.Post'
      summary: Get a Post
      tags:
      - posts
  /users:
    get:
      consumes:
      - application/json
      description: This will conduct a fuzzy search for a user by checking both first_name,
        last_name, email and username
      operationId: GetUserBySearch
      parameters:
      - description: User
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.User'
            type: array
      summary: Finds users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Creates a user account returns the account details
      operationId: CreateUser
      parameters:
      - description: User parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.Userparams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Create a User account
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: This will delete a user, more for cleaning database.
      operationId: DeleteUser
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Deletes A user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Return a single user using their ID
      operationId: GetUserByID
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Return a user by ID
      tags:
      - user
  /users/post/{id}:
    get:
      consumes:
      - application/json
      description: Get all the posts created using a users ID
      operationId: GetPostByUser
      parameters:
      - description: User ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get all posts created by a user
      tags:
      - user
schemes:
- http
- https
swagger: "2.0"
